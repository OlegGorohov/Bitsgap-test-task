{"version":3,"sources":["PlaceOrder/model.ts","PlaceOrder/constants.ts","PlaceOrder/context.tsx","PlaceOrder/store/PlaceOrderStore.ts","components/Button/Button.tsx","components/Tooltip/Tooltip.tsx","components/TextInput/TextInput.tsx","components/NumberInput/useNumberFormat.ts","components/NumberInput/NumberInput.tsx","components/Switch/Switch.tsx","components/TextButton/TextButton.tsx","PlaceOrder/components/PlaceOrderTypeSwitch/PlaceOrderTypeSwitch.tsx","PlaceOrder/components/TakeProfit/TakeProfit.tsx","PlaceOrder/PlaceOrderForm.tsx","PlaceOrder/index.tsx","App.tsx","index.tsx"],"names":["ProfitTargetEnum","ErrorsEnum","BASE_CURRENCY","QUOTE_CURRENCY","store","action","bound","res","this","profitTargets","length","map","row","activeOrderSide","amountToSell","amount","tradePrice","price","reduce","sum","item","toFixed","side","total","inputs","isTakeProfitSwitchOn","setIsTakeProfitSwitchOn","errors","setErrors","value","setProfitTargets","getDefaultProfitTarget","id","filter","lastItem","newProfit","profit","getTradePrice","itemMaxId","maxValue","sumValue","forEach","getNewProfitTargets","getNewProfitTarget","field","update","Number","getProfit","newProfitTargets","isValid","sumProfit","sumAmount","prevProfit","newError","text","PreviousValue","MinTradePrice","MinProfitValue","SumProfit","SumAmount","observable","computed","storeContext","createContext","useStore","useContext","StoreProvider","children","Provider","b","block","Button","color","size","inactive","rest","disableRipple","className","Tooltip","message","isError","placement","small","open","interactive","disableHoverListener","disableTouchListener","onClose","title","classes","tooltip","error","arrow","popper","disableFocusListener","TextInput","variant","onChange","onFocus","onBlur","InputLabelProps","InputProps","errorPlacement","inputClasses","root","Boolean","focused","adornedEnd","adorned","adornedStart","input","labelClasses","useState","isFocused","setIsFocused","TextField","event","target","disableUnderline","xor","a","escapeRegexpSymbols","str","replace","NumberInput","min","max","decimalScale","onMouseUp","onKeyUp","numberInput","numberValue","prefix","suffix","Infinity","safePrefix","safeSuffix","prefixRegExp","RegExp","suffixRegExp","signRegExp","rawValueRegExp","numberRegExp","inputRef","useRef","setFocused","caretPosition","setCaretPosition","formatNumber","formattedValue","setFormattedValue","hasPrefix","test","hasSuffix","hasSign","hasOnlyValidSymbols","pipe","removePrefix","removeSuffix","propEq","isRawStringValid","isFormattingBroken","areValuesValid","rawString","handleChange","rawValue","getRawValue","formatString","convertToNumber","start","handleFocus","handleBlur","handleKeyUp","currentTarget","selectionStart","selectionEnd","position","correctCaretPosition","handleMouseUp","current","end","leftBound","rightBound","clamp","toString","maybeAddSign","trimDecimals","match","sign","whole","decimal","number","parseFloat","isNaN","toRange","needNegate","valueWithoutSign","useEffect","setSelectionRange","useNumberFormat","Switch","checked","disabled","reversed","fullWidth","label","type","e","focusVisible","TextButton","PlaceOrderTypeSwitch","handleToggle","orderType","onClick","TakeProfit","observer","orderSide","removeProfitTarget","addProfitTarget","updateProfitTargets","projectProfit","updateField","isDisplayButton","useMemo","getErrorText","useCallback","renderInputs","profitError","Profit","tradePriceError","TradePrice","amountError","AmountToSell","key","endAdornment","Cancel","renderTitles","AddCircle","PlaceOrderForm","setPrice","setAmount","setTotal","setOrderSide","validation","onSubmit","preventDefault","PlaceOrder","App","ReactDOM","render","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.0bc46409.chunk.js","sourcesContent":["export type OrderSide = \"buy\" | \"sell\";\n\nexport enum ProfitTargetEnum {\n  Id = \"id\",\n  Profit = \"profit\",\n  TradePrice = \"tradePrice\",\n  AmountToSell = \"amountToSell\",\n  Errors = \"errors\",\n}\ninterface Error {\n  text: string;\n  id?: number;\n}\nexport interface ProfitTargetError {\n  [ProfitTargetEnum.Profit]: Error;\n  [ProfitTargetEnum.TradePrice]: Error;\n  [ProfitTargetEnum.AmountToSell]: Error;\n}\n\nexport interface ProfitTarget {\n  [ProfitTargetEnum.Id]: number;\n  [ProfitTargetEnum.Profit]: number;\n  [ProfitTargetEnum.TradePrice]: number;\n  [ProfitTargetEnum.AmountToSell]: number;\n  [ProfitTargetEnum.Errors]?: ProfitTargetError;\n}\n\nexport enum ErrorsEnum {\n  SumProfit = \"Maximum profit sum is 500%\",\n  MinProfitValue = \"Minimum value is 0.01\",\n  PreviousValue = \"Each target's profit should be greater than the previous one\",\n  MinTradePrice = \"Price must be greater than 0\",\n  SumAmount = \"out of 100% selected. Please decrease by\",\n}\n","export const BASE_CURRENCY = \"BTC\";\nexport const QUOTE_CURRENCY = \"USDT\";\nexport const MAX_ROWS = 5;\nexport const DEFAULT_AMOUNT_TO_SELL = 100 / MAX_ROWS;\n","import React, { createContext, useContext } from \"react\";\n\nimport { PlaceOrderStore } from \"./store/PlaceOrderStore\";\n\nconst store = new PlaceOrderStore();\nconst storeContext = createContext(store);\n\nconst useStore = () => {\n  return useContext(storeContext);\n};\n\nconst StoreProvider: React.FC = ({ children }) => (\n  <storeContext.Provider value={store}>{children}</storeContext.Provider>\n);\n\nexport { useStore, StoreProvider };\n","import { observable, computed, action } from \"mobx\";\n\nimport {\n  OrderSide,\n  ProfitTarget,\n  ErrorsEnum,\n  ProfitTargetError,\n} from \"../model\";\nimport { DEFAULT_AMOUNT_TO_SELL } from \"PlaceOrder/constants\";\n\nexport class PlaceOrderStore {\n  @observable activeOrderSide: OrderSide = \"buy\";\n  @observable price: number = 0;\n  @observable amount: number = 0;\n  @observable isTakeProfitSwitchOn: boolean = false;\n  @observable profitTargets: ProfitTarget[] = [];\n  @observable errors: ProfitTargetError[] | null = null;\n\n  @computed get projectProfit(): string {\n    let res = 0;\n\n    if (this.profitTargets.length > 0) {\n      res = this.profitTargets\n        .map((row) => {\n          const multiplier = this.activeOrderSide === \"buy\" ? 1 : -1;\n\n          return (\n            multiplier *\n            (row.amountToSell * this.amount * 0.01) *\n            (row.tradePrice - this.price)\n          );\n        })\n        .reduce((sum, item) => {\n          return sum + item;\n        });\n    }\n\n    return res.toFixed(2);\n  }\n\n  @computed get total(): number {\n    return this.price * this.amount;\n  }\n\n  @action.bound\n  public setOrderSide(side: OrderSide) {\n    this.activeOrderSide = side;\n  }\n\n  @action.bound\n  public setPrice(price: number) {\n    this.price = price;\n  }\n\n  @action.bound\n  public setAmount(amount: number) {\n    this.amount = amount;\n  }\n\n  @action.bound\n  public setTotal(total: number) {\n    this.amount = this.price > 0 ? total / this.price : 0;\n  }\n\n  @action.bound\n  public setProfitTargets(inputs: ProfitTarget[]) {\n    if (inputs.length === 0 && this.isTakeProfitSwitchOn) {\n      this.setIsTakeProfitSwitchOn(false);\n    }\n\n    if (this.errors) {\n      this.setErrors(null);\n    }\n\n    this.profitTargets = inputs;\n  }\n\n  @action.bound\n  public setIsTakeProfitSwitchOn(value: boolean) {\n    if (value) {\n      this.setProfitTargets([this.getDefaultProfitTarget()]);\n    }\n\n    this.isTakeProfitSwitchOn = value;\n  }\n\n  @action.bound\n  public removeProfitTarget(id: number) {\n    this.setProfitTargets(this.profitTargets.filter((item) => item.id !== id));\n\n    if (this.errors) {\n      this.setErrors(null);\n    }\n  }\n\n  @action.bound\n  private getNewProfitTarget(): ProfitTarget {\n    const lastItem = this.profitTargets[this.profitTargets.length - 1];\n    const newProfit = lastItem.profit + 2;\n\n    return {\n      id: lastItem.id + 1,\n      profit: newProfit,\n      tradePrice: this.getTradePrice(newProfit),\n      amountToSell: DEFAULT_AMOUNT_TO_SELL,\n    };\n  }\n\n  @action.bound\n  private getNewProfitTargets(): ProfitTarget[] {\n    let itemMaxId = 0;\n    let maxValue = 0;\n    let sumValue = 0;\n\n    this.profitTargets.forEach((item) => {\n      if (item.amountToSell > maxValue) {\n        maxValue = item.amountToSell;\n        itemMaxId = item.id;\n      }\n      sumValue += item.amountToSell;\n    });\n\n    return this.profitTargets.map((item) => {\n      if (item.id === itemMaxId) {\n        return {\n          ...item,\n          amountToSell:\n            sumValue > 100 - DEFAULT_AMOUNT_TO_SELL\n              ? item.amountToSell - (sumValue - (100 - DEFAULT_AMOUNT_TO_SELL))\n              : item.amountToSell,\n        };\n      }\n\n      return item;\n    });\n  }\n\n  @action.bound\n  public addProfitTarget() {\n    this.setProfitTargets([\n      ...this.getNewProfitTargets(),\n      this.getNewProfitTarget(),\n    ]);\n\n    if (this.errors) {\n      this.setErrors(null);\n    }\n  }\n\n  @action.bound\n  public updateField(\n    field: keyof ProfitTarget,\n    id: number,\n    value?: number | null\n  ) {\n    const update = (value: number) => {\n      return this.profitTargets.map((row) => {\n        if (row.id === id) {\n          return { ...row, [field]: value };\n        }\n\n        return row;\n      });\n    };\n\n    if (value || value === 0 || value === null) {\n      this.setProfitTargets(update(Number(value)));\n    } else if (field === \"tradePrice\") {\n      this.setProfitTargets(\n        update(this.getTradePrice(this.profitTargets[id]?.profit ?? 0))\n      );\n    } else if (field === \"profit\") {\n      this.setProfitTargets(\n        update(this.getProfit(this.profitTargets[id]?.tradePrice ?? 0))\n      );\n    }\n\n    if (this.errors) {\n      this.setErrors(null);\n    }\n  }\n\n  @action.bound\n  public updateProfitTargets(price: number) {\n    const newProfitTargets = this.profitTargets.map((row) => {\n      return { ...row, tradePrice: this.getTradePrice(row.profit, price) };\n    });\n\n    this.setProfitTargets(newProfitTargets);\n  }\n\n  @action.bound\n  private getDefaultProfitTarget(): ProfitTarget {\n    return {\n      id: 0,\n      profit: 2,\n      tradePrice: this.getTradePrice(2),\n      amountToSell: 100,\n    };\n  }\n\n  @action.bound\n  private getTradePrice(profit: number, price = this.price): number {\n    return +(price + price * profit * 0.01).toFixed(2);\n  }\n\n  @action.bound\n  private getProfit(tradePrice: number, price = this.price): number {\n    return price ? +(((tradePrice - price) / price) * 100).toFixed(2) : 0;\n  }\n\n  @action.bound\n  public setErrors(errors: ProfitTargetError[] | null) {\n    this.errors = errors;\n  }\n\n  @action.bound\n  public validation(): boolean {\n    let isValid = true;\n    let sumProfit = 0;\n    let sumAmount = 0;\n    let prevProfit = 0;\n    let errors = [] as ProfitTargetError[];\n\n    this.profitTargets.forEach((item) => {\n      let newError = {} as ProfitTargetError;\n\n      if (item.profit <= prevProfit) {\n        newError = {\n          ...newError,\n          profit: { text: ErrorsEnum.PreviousValue, id: item.id },\n        };\n        isValid = false;\n      }\n\n      if (item.tradePrice <= 0) {\n        newError = {\n          ...newError,\n          tradePrice: { text: ErrorsEnum.MinTradePrice, id: item.id },\n        };\n        isValid = false;\n      }\n\n      if (item.profit < 0.01) {\n        newError = {\n          ...newError,\n          profit: { text: ErrorsEnum.MinProfitValue, id: item.id },\n        };\n        isValid = false;\n      }\n\n      sumAmount += item.amountToSell;\n      sumProfit += item.profit;\n      prevProfit = item.profit;\n      errors[item.id] = newError;\n    });\n\n    if (sumProfit > 500) {\n      errors = errors.map((item) => ({\n        ...item,\n        profit: {\n          text: ErrorsEnum.SumProfit,\n        },\n      }));\n      isValid = false;\n    }\n\n    if (sumAmount > 100) {\n      errors = errors.map((item) => ({\n        ...item,\n        amountToSell: {\n          text: `${sumAmount} ${ErrorsEnum.SumAmount} ${sumAmount - 100}`,\n        },\n      }));\n      isValid = false;\n    }\n\n    this.setErrors(errors);\n\n    return isValid;\n  }\n}\n","import React from \"react\";\nimport { Button as MUIButton, ButtonProps } from \"@material-ui/core\";\nimport block from \"bem-cn-lite\";\n\nimport \"./Button.scss\";\n\ntype Props = Omit<ButtonProps, \"color\" | \"size\"> & {\n  color: \"green\" | \"red\";\n  size?: \"small\" | \"normal\";\n  inactive?: boolean;\n};\n\nconst b = block(\"button\");\n\nconst Button: React.FC<Props> = ({\n  children,\n  color,\n  size = \"normal\",\n  inactive = false,\n  ...rest\n}) => (\n  <MUIButton disableRipple className={b({ color, inactive, size })} {...rest}>\n    {children}\n  </MUIButton>\n);\n\nexport { Button };\n","import React from \"react\";\nimport block from \"bem-cn-lite\";\nimport { Tooltip as MUITooltip, TooltipProps } from \"@material-ui/core\";\n\nimport \"./Tooltip.scss\";\n\nconst b = block(\"tooltip\");\n\ntype Props = {\n  message: React.ReactNode;\n  children: TooltipProps[\"children\"];\n  open?: boolean;\n  isError?: boolean;\n  placement?: TooltipProps[\"placement\"];\n  small?: boolean;\n  interactive?: boolean;\n  disableHoverListener?: boolean;\n  disableTouchListener?: boolean;\n  onClose?(): void;\n};\n\nfunction Tooltip({\n  children,\n  message,\n  isError,\n  placement = \"bottom\",\n  small,\n  open,\n  interactive,\n  disableHoverListener,\n  disableTouchListener,\n  onClose\n}: Props) {\n  return (\n    <MUITooltip\n      title={<>{message}</>}\n      classes={{\n        tooltip: b({ error: isError, small }),\n        arrow: b(\"arrow\", { error: isError }),\n        popper: b(\"popper\")\n      }}\n      placement={placement}\n      open={open}\n      arrow\n      disableFocusListener // onFocus and onBlur do not work if using a Tooltip with TextField https://github.com/mui-org/material-ui/issues/19883#issuecomment-592980194\n      interactive={interactive}\n      disableHoverListener={disableHoverListener}\n      disableTouchListener={disableTouchListener}\n      onClose={onClose}\n    >\n      {children}\n    </MUITooltip>\n  );\n}\n\nexport { Tooltip };\n","/* eslint @typescript-eslint/no-use-before-define: 0 */\n\nimport React, { useState, ReactNode } from \"react\";\nimport block from \"bem-cn-lite\";\nimport {\n  TextField,\n  TextFieldProps,\n  InputBaseProps as MUIInputProps,\n  InputLabelProps as MUIInputLabelProps,\n  TooltipProps,\n} from \"@material-ui/core\";\n\nimport { Tooltip } from \"../Tooltip/Tooltip\";\nimport \"./FilledInput.scss\";\nimport \"./UnderlinedInput.scss\";\n\ntype Props = Omit<\n  TextFieldProps,\n  \"variant\" | \"onChange\" | \"className\" | \"classes\" | \"error\"\n> & {\n  variant?: \"underlined\" | \"filled\";\n  error?: ReactNode;\n  InputLabelProps?: Omit<\n    TextFieldProps[\"InputLabelProps\"],\n    \"className\" | \"classes\"\n  >;\n  InputProps?: Omit<\n    TextFieldProps[\"InputProps\"],\n    \"disableUnderline\" | \"classes\" | \"className\"\n  >;\n  errorPlacement?: TooltipProps[\"placement\"];\n  onChange?(value: string): void;\n};\n\nconst TextInput = ({\n  variant = \"filled\",\n  error,\n  onChange,\n  onFocus,\n  onBlur,\n  InputLabelProps,\n  InputProps,\n  errorPlacement = \"top\",\n  ...rest\n}: Props) => {\n  const b =\n    variant === \"filled\" ? block(\"filled-input\") : block(\"underlined-input\");\n  const inputClasses: MUIInputProps[\"classes\"] = {\n    root: b(\"input-wrapper\", { error: Boolean(error) }),\n    focused: b(\"input-wrapper\", { focused: true }),\n    adornedEnd: b(\"input-wrapper\", { adorned: \"end\" }),\n    adornedStart: b(\"input-wrapper\", { adorned: \"start\" }),\n    input: b(\"input\"),\n  };\n\n  const labelClasses: MUIInputLabelProps[\"classes\"] = {\n    root: b(\"input-label\"),\n  };\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  return (\n    <Tooltip\n      open={isFocused && !!error}\n      message={error ?? \"\"}\n      isError\n      placement={errorPlacement}\n    >\n      <TextField\n        {...rest}\n        className={b()}\n        variant=\"filled\"\n        onChange={handleChange}\n        InputLabelProps={{\n          ...InputLabelProps,\n          classes: labelClasses,\n        }}\n        InputProps={{\n          ...InputProps,\n          onFocus: handleFocus,\n          onBlur: handleBlur,\n          disableUnderline: true,\n          classes: inputClasses,\n        }}\n      />\n    </Tooltip>\n  );\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    onChange?.(event.target.value);\n  }\n\n  function handleFocus(event: React.FocusEvent<HTMLInputElement>) {\n    onFocus ? onFocus(event) : InputProps?.onFocus?.(event);\n    setIsFocused(true);\n  }\n\n  function handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n    onBlur ? onBlur(event) : InputProps?.onBlur?.(event);\n    setIsFocused(false);\n  }\n};\n\nexport { TextInput };\nexport type { Props as TextInputProps };\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { pipe, replace, test, propEq, clamp } from \"ramda\";\n\ntype FormatOptions = {\n  suffix?: string;\n  prefix?: string;\n  min?: number;\n  max?: number;\n  decimalScale?: number;\n};\n\ntype Handlers = {\n  onChange?(value: number | null): void;\n  onBlur?(value: number | null): void;\n  onFocus?(event: React.FocusEvent<HTMLInputElement>): void;\n  onMouseUp?(event: React.MouseEvent<HTMLInputElement>): void;\n  onKeyUp?(event: React.KeyboardEvent<HTMLInputElement>): void;\n};\n\nconst xor = (a: boolean, b: boolean) => (a ? !b : b);\nconst escapeRegexpSymbols = (str: string) =>\n  str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\nfunction useNumberFormat(\n  numberValue: number | null,\n  { onChange, onBlur, onFocus, onMouseUp, onKeyUp }: Handlers,\n  {\n    prefix = \"\",\n    suffix = \"\",\n    min = -Infinity,\n    max = Infinity,\n    decimalScale,\n  }: FormatOptions = {}\n) {\n  const safePrefix = escapeRegexpSymbols(prefix);\n  const safeSuffix = escapeRegexpSymbols(suffix);\n  const prefixRegExp = RegExp(`^(-)?(${safePrefix})`);\n  const suffixRegExp = RegExp(`(${safeSuffix})$`);\n  const signRegExp = RegExp(`^-(${safePrefix})`);\n  const rawValueRegExp = RegExp(\"^(-)?(\\\\d*)?(\\\\.\\\\d*)?$\");\n  const numberRegExp = RegExp(\n    \"^(-)?(\\\\d*)?(\\\\.\\\\d{0,\" + (decimalScale ?? \"\") + \"})?\"\n  );\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focused, setFocused] = useState(false);\n  const [caretPosition, setCaretPosition] = useState([0, 0]);\n  const [formattedValue, setFormattedValue] = useState(\n    formatNumber(numberValue)\n  );\n\n  const hasPrefix = test(prefixRegExp);\n  const hasSuffix = test(suffixRegExp);\n  const hasSign = test(signRegExp);\n  const hasOnlyValidSymbols = pipe(\n    removePrefix,\n    removeSuffix,\n    replace(/[-\\d.]/g, \"\"),\n    propEq(\"length\", 0)\n  );\n\n  const isRawStringValid = test(rawValueRegExp);\n  const isFormattingBroken = (value: string) =>\n    !test(/^-?\\s*$/, formattedValue) && xor(hasPrefix(value), hasSuffix(value));\n  const areValuesValid = (value: string, rawString: string) =>\n    hasOnlyValidSymbols(value) &&\n    !isFormattingBroken(value) &&\n    isRawStringValid(rawString);\n\n  useEffect(() => {\n    const [start, end] = caretPosition;\n    inputRef.current?.setSelectionRange(start, end);\n  }, [caretPosition]);\n\n  useEffect(() => {\n    if (!focused) {\n      setFormattedValue(formatNumber(numberValue));\n    }\n  }, [numberValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { value } = event.target;\n    const rawValue = getRawValue(value);\n\n    if (areValuesValid(value, rawValue)) {\n      setFormattedValue(formatString(rawValue));\n      onChange?.(convertToNumber(rawValue));\n    } else {\n      const [start] = caretPosition;\n      setCaretPosition([start, start]);\n    }\n  }\n\n  function handleFocus(event: React.FocusEvent<HTMLInputElement>) {\n    setFocused(true);\n    onFocus?.(event);\n  }\n\n  function handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n    const { value } = event.target;\n    const rawValue = getRawValue(value);\n    setFormattedValue(formatNumber(numberValue));\n    onBlur?.(convertToNumber(rawValue));\n    setFocused(false);\n  }\n\n  function handleKeyUp(event: React.KeyboardEvent<HTMLInputElement>) {\n    const { selectionStart, selectionEnd } = event.currentTarget;\n    const position = correctCaretPosition(\n      Number(selectionStart),\n      Number(selectionEnd)\n    );\n    setCaretPosition(position);\n    onKeyUp?.(event);\n  }\n\n  function handleMouseUp(event: React.MouseEvent<HTMLInputElement>) {\n    const position = correctCaretPosition(\n      inputRef.current?.selectionStart ?? 0,\n      inputRef.current?.selectionEnd ?? 0\n    );\n\n    setCaretPosition(position);\n    onMouseUp?.(event);\n  }\n\n  function correctCaretPosition(start: number, end: number) {\n    const value = inputRef.current?.value || \"\";\n    const leftBound = prefix.length + (hasSign(value) ? 1 : 0);\n    const rightBound = value.length - suffix.length;\n    const position =\n      leftBound <= rightBound ? clamp(leftBound, rightBound, start) : start;\n\n    return start === end ? [position, position] : [start, end];\n  }\n\n  function formatNumber(value: number | null) {\n    return formatString(value !== null ? value.toString() : \"\");\n  }\n\n  function getRawValue(value: string) {\n    return pipe(removePrefix, removeSuffix, maybeAddSign, trimDecimals)(value);\n  }\n\n  function formatString(value: string) {\n    if (value === \"-\" || value === \"\") {\n      return value;\n    }\n\n    const [, sign = \"\", whole = \"\", decimal = \"\"] =\n      value.match(numberRegExp) ?? [];\n    return `${sign}${prefix}${whole}${decimal}${suffix}`;\n  }\n\n  function convertToNumber(value: string): number | null {\n    const number = parseFloat(value);\n    return Number.isNaN(number) ? null : toRange(number);\n  }\n\n  function maybeAddSign(value: string) {\n    const needNegate = (value.match(/-/g)?.length ?? 0) % 2 !== 0;\n    const valueWithoutSign = value.replace(/-/g, \"\");\n    return needNegate ? `-${valueWithoutSign}` : valueWithoutSign;\n  }\n\n  function toRange(value: number) {\n    return clamp(min, max, value);\n  }\n\n  function trimDecimals(value: string) {\n    return value.match(numberRegExp)?.[0] ?? value;\n  }\n\n  function removePrefix(value: string) {\n    return value.replace(prefixRegExp, \"$1\");\n  }\n\n  function removeSuffix(value: string) {\n    return value.replace(suffixRegExp, \"\");\n  }\n\n  return {\n    inputRef,\n    value: formattedValue,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyUp: handleKeyUp,\n    onMouseUp: handleMouseUp,\n  } as const;\n}\n\nexport { useNumberFormat };\n","import React from \"react\";\n\nimport { TextInput, TextInputProps } from \"../TextInput/TextInput\";\nimport { useNumberFormat } from \"./useNumberFormat\";\n\ntype Props = Omit<TextInputProps, \"onChange\" | \"onBlur\" | \"value\"> & {\n  value: number | null;\n  min?: number;\n  max?: number;\n  decimalScale?: number;\n  onChange?(value: number | null): void;\n  onBlur?(value: number | null): void;\n};\n\nfunction NumberInput({\n  value,\n  min,\n  max,\n  decimalScale,\n  onChange,\n  onBlur,\n  onFocus,\n  onMouseUp,\n  onKeyUp,\n  InputProps,\n  ...rest\n}: Props) {\n  const numberInput = useNumberFormat(\n    value,\n    { onChange, onBlur, onFocus, onMouseUp, onKeyUp },\n    { min, max, decimalScale }\n  );\n  return <TextInput {...rest} InputProps={{ ...InputProps, ...numberInput }} />;\n}\n\nexport { NumberInput };\nexport type { Props as NumberInputProps };\n","import React from \"react\";\nimport block from \"bem-cn-lite\";\n\nimport \"./Switch.scss\";\n\nconst b = block(\"switch\");\n\ntype Props = {\n  checked: boolean;\n  label?: string;\n  disabled?: boolean;\n  reversed?: boolean;\n  fullWidth?: boolean;\n  onChange?(value: boolean): void;\n};\n\nfunction Switch({\n  checked,\n  onChange,\n  disabled = false,\n  reversed,\n  fullWidth,\n  label\n}: Props) {\n  return (\n    <label className={b({ reversed, \"full-width\": fullWidth })}>\n      <input\n        className={b(\"checkbox\")}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={handleChange}\n        disabled={disabled}\n      />\n      <div className={b(\"switch\")} />\n      {label && <span className={b(\"label\")}>{label}</span>}\n    </label>\n  );\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    onChange && onChange(e.target.checked);\n  }\n}\n\nexport { Switch };\n","import React from \"react\";\nimport { Button, ButtonProps } from \"@material-ui/core\";\nimport block from \"bem-cn-lite\";\n\nimport \"./TextButton.scss\";\n\nconst b = block(\"text-button\");\n\nconst classes: ButtonProps[\"classes\"] = {\n  root: b(),\n  focusVisible: b({ focused: true })\n};\n\nfunction TextButton({ children, ...rest }: ButtonProps) {\n  return (\n    <Button disableRipple classes={classes} {...rest}>\n      {children}\n    </Button>\n  );\n}\n\nexport { TextButton };\n","import React from \"react\";\nimport block from \"bem-cn-lite\";\n\nimport { Button } from \"components\";\nimport { OrderSide } from \"../../model\";\n\nimport \"./PlaceOrderTypeSwitch.scss\";\n\nconst b = block(\"place-order-type-switch\");\n\ntype Props = {\n  activeOrderSide: OrderSide;\n  onChange(orderSide: OrderSide): void;\n};\n\nconst PlaceOrderTypeSwitch = ({ activeOrderSide, onChange }: Props) => {\n  const handleToggle = (orderType: OrderSide) => {\n    onChange(orderType);\n  };\n\n  return (\n    <div className={b()}>\n      <Button\n        color=\"green\"\n        size=\"small\"\n        fullWidth\n        inactive={activeOrderSide !== \"buy\"}\n        onClick={() => handleToggle(\"buy\")}\n      >\n        Buy\n      </Button>\n      <Button\n        color=\"red\"\n        size=\"small\"\n        fullWidth\n        inactive={activeOrderSide === \"buy\"}\n        onClick={() => handleToggle(\"sell\")}\n      >\n        Sell\n      </Button>\n    </div>\n  );\n};\n\nexport { PlaceOrderTypeSwitch };\n","/* eslint @typescript-eslint/no-use-before-define: 0 */\n\nimport React, { useMemo, useEffect, useCallback } from \"react\";\nimport block from \"bem-cn-lite\";\nimport { AddCircle, Cancel } from \"@material-ui/icons\";\nimport { observer } from \"mobx-react\";\n\nimport { Switch, TextButton, NumberInput } from \"components\";\n\nimport { QUOTE_CURRENCY, MAX_ROWS } from \"../../constants\";\nimport { useStore } from \"../../context\";\nimport { OrderSide, ProfitTargetEnum, ProfitTargetError } from \"../../model\";\nimport \"./TakeProfit.scss\";\n\ntype Props = {\n  orderSide: OrderSide;\n};\n\nconst b = block(\"take-profit\");\n\nconst TakeProfit: React.FC<Props> = observer(({ orderSide }) => {\n  const {\n    isTakeProfitSwitchOn,\n    setIsTakeProfitSwitchOn,\n    profitTargets,\n    removeProfitTarget,\n    addProfitTarget,\n    updateProfitTargets,\n    price,\n    projectProfit,\n    updateField,\n    errors,\n  } = useStore();\n\n  const isDisplayButton = useMemo(() => profitTargets.length < MAX_ROWS, [\n    profitTargets.length,\n  ]);\n\n  const getErrorText = useCallback(\n    (id: number, field: keyof ProfitTargetError): string => {\n      const error = errors?.[id]?.[field];\n\n      if (errors && (error?.id || error?.id === 0)) {\n        return errors[id][field].id === id ? errors[id][field].text : \"1\";\n      }\n\n      return error?.text ?? \"\";\n    },\n    [errors]\n  );\n\n  const renderInputs = useMemo(\n    (): JSX.Element[] =>\n      profitTargets.map(({ id, profit, tradePrice, amountToSell }) => {\n        const profitError = getErrorText(id, ProfitTargetEnum.Profit);\n        const tradePriceError = getErrorText(id, ProfitTargetEnum.TradePrice);\n        const amountError = getErrorText(id, ProfitTargetEnum.AmountToSell);\n\n        return (\n          <div className={b(\"inputs\")} key={id}>\n            <NumberInput\n              value={profit}\n              InputProps={{ endAdornment: \"%\" }}\n              variant=\"underlined\"\n              onChange={(value: number) =>\n                updateField(ProfitTargetEnum.Profit, id, value)\n              }\n              onBlur={() => {\n                updateField(ProfitTargetEnum.TradePrice, id);\n              }}\n              error={profitError}\n            />\n            <NumberInput\n              value={tradePrice}\n              InputProps={{ endAdornment: QUOTE_CURRENCY }}\n              variant=\"underlined\"\n              onChange={(value: number) =>\n                updateField(ProfitTargetEnum.TradePrice, id, value)\n              }\n              onBlur={() => {\n                updateField(ProfitTargetEnum.Profit, id);\n              }}\n              error={tradePriceError}\n            />\n            <NumberInput\n              value={amountToSell}\n              decimalScale={2}\n              InputProps={{ endAdornment: \"%\" }}\n              variant=\"underlined\"\n              onBlur={(value: number) => {\n                updateField(ProfitTargetEnum.AmountToSell, id, value);\n              }}\n              error={amountError}\n            />\n            <div className={b(\"cancel-icon\")}>\n              <Cancel\n                onClick={() => {\n                  removeProfitTarget(id);\n                }}\n              />\n            </div>\n          </div>\n        );\n      }),\n    [profitTargets, getErrorText, updateField, removeProfitTarget]\n  );\n\n  const renderTitles = useMemo(\n    () => (\n      <div className={b(\"titles\")}>\n        <span>Profit</span>\n        <span>Trade price</span>\n        <span>Amount to {orderSide === \"buy\" ? \"sell\" : \"buy\"}</span>\n      </div>\n    ),\n    [orderSide]\n  );\n\n  useEffect(() => {\n    updateProfitTargets(price);\n  }, [price, updateProfitTargets]);\n\n  return (\n    <div className={b()}>\n      <div className={b(\"switch\")}>\n        <span>Take profit</span>\n        <Switch\n          checked={isTakeProfitSwitchOn}\n          onChange={setIsTakeProfitSwitchOn}\n        />\n      </div>\n      {isTakeProfitSwitchOn && (\n        <div className={b(\"content\")}>\n          {renderTitles}\n          {renderInputs}\n          {isDisplayButton && (\n            <TextButton className={b(\"add-button\")}>\n              <AddCircle className={b(\"add-icon\")} />\n              <span onClick={addProfitTarget}>\n                Add profit target {profitTargets.length}/{MAX_ROWS}\n              </span>\n            </TextButton>\n          )}\n          <div className={b(\"projected-profit\")}>\n            <span className={b(\"projected-profit-title\")}>\n              Projected profit\n            </span>\n            <span className={b(\"projected-profit-value\")}>\n              <span>{projectProfit}</span>\n              <span className={b(\"projected-profit-currency\")}>\n                {QUOTE_CURRENCY}\n              </span>\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport { TakeProfit };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport block from \"bem-cn-lite\";\n\nimport { NumberInput, Button } from \"components\";\n\nimport { BASE_CURRENCY, QUOTE_CURRENCY } from \"./constants\";\nimport { useStore } from \"./context\";\nimport { PlaceOrderTypeSwitch } from \"./components/PlaceOrderTypeSwitch/PlaceOrderTypeSwitch\";\nimport { TakeProfit } from \"./components/TakeProfit/TakeProfit\";\nimport \"./PlaceOrderForm.scss\";\n\nconst b = block(\"place-order-form\");\n\nexport const PlaceOrderForm = observer(() => {\n  const {\n    activeOrderSide,\n    price,\n    total,\n    amount,\n    setPrice,\n    setAmount,\n    setTotal,\n    setOrderSide,\n    validation,\n  } = useStore();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (validation()) {\n      // send\n    }\n  };\n\n  return (\n    <form className={b()} onSubmit={handleSubmit}>\n      <div className={b(\"header\")}>\n        Binance: {`${BASE_CURRENCY} / ${QUOTE_CURRENCY}`}\n      </div>\n      <div className={b(\"type-switch\")}>\n        <PlaceOrderTypeSwitch\n          activeOrderSide={activeOrderSide}\n          onChange={setOrderSide}\n        />\n      </div>\n      <div className={b(\"price\")}>\n        <NumberInput\n          label=\"Price\"\n          value={price}\n          onChange={(value) => setPrice(Number(value))}\n          InputProps={{ endAdornment: QUOTE_CURRENCY }}\n        />\n      </div>\n      <div className={b(\"amount\")}>\n        <NumberInput\n          value={amount}\n          label=\"Amount\"\n          onChange={(value) => setAmount(Number(value))}\n          InputProps={{ endAdornment: BASE_CURRENCY }}\n        />\n      </div>\n      <div className={b(\"total\")}>\n        <NumberInput\n          value={total}\n          label=\"Total\"\n          onChange={(value) => setTotal(Number(value))}\n          InputProps={{ endAdornment: QUOTE_CURRENCY }}\n        />\n      </div>\n      <div className={b(\"take-profit\")}>\n        <TakeProfit orderSide={activeOrderSide} />\n      </div>\n      <div className=\"submit\">\n        <Button\n          color={activeOrderSide === \"buy\" ? \"green\" : \"red\"}\n          type=\"submit\"\n          fullWidth\n        >\n          {activeOrderSide === \"buy\"\n            ? `Buy ${BASE_CURRENCY}`\n            : `Sell ${QUOTE_CURRENCY}`}\n        </Button>\n      </div>\n    </form>\n  );\n});\n","import React from \"react\";\n\nimport { StoreProvider } from \"./context\";\nimport { PlaceOrderForm } from \"./PlaceOrderForm\";\n\nexport const PlaceOrder = () => (\n  <StoreProvider>\n    <PlaceOrderForm />\n  </StoreProvider>\n);\n","import React from \"react\";\n\nimport { PlaceOrder } from \"./PlaceOrder\";\nimport \"./App.scss\";\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <div className=\"app__form\">\n        <PlaceOrder />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <StylesProvider injectFirst>\n    <App />\n  </StylesProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}